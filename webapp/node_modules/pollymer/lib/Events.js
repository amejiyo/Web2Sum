"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _map = require("babel-runtime/core-js/map");

var _map2 = _interopRequireDefault(_map);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Events = function () {
    function Events() {
        (0, _classCallCheck3.default)(this, Events);

        this._events = new _map2.default();
    }

    (0, _createClass3.default)(Events, [{
        key: "on",
        value: function on(type, handler) {
            var _this = this;

            var currentHandlers = this._events.get(type) || [];
            var handlers = currentHandlers.concat([handler]);
            this._events.set(type, handlers);
            return function () {
                return _this.off(type, handler);
            };
        }
    }, {
        key: "off",
        value: function off(type, handler) {
            if (typeof handler !== "undefined") {
                if (this._events.has(type)) {
                    var currentHandlers = this._events.get(type);
                    this._events.set(type, currentHandlers.filter(function (item) {
                        return item !== handler;
                    }));
                }
            } else {
                this._events.delete(type);
            }
        }
    }, {
        key: "trigger",
        value: function trigger(type, obj) {
            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            if (this._events.has(type)) {
                this._events.get(type).forEach(function (handler) {
                    return handler.call.apply(handler, [obj].concat(args));
                });
            }
        }
    }]);
    return Events;
}();

exports.default = Events;